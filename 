from django.test import TestCase
from django.http import HttpRequest
from django.template.loader import render_to_string

from lists.views import home_page


class HomePageViewTest(TestCase):

    def test_home_page_uses_home_template(self):
        request = HttpRequest()
        response = home_page(request)
        exptected_content = render_to_string('home.html')
        self.assertEqual(response.content.decode('utf8'), exptected_content)
        # with open('lists/templates/home.html') as template:
        #    self.assertEqual(response.content.decode('utf8'), template.read())
        self.assertIn("<title>To-Do lists</title>", response.content.decode("utf8"))
        self.assertTrue(response.content.strip().startswith(b"<html>"))
        self.assertTrue(response.content.strip().endswith(b"</html>"))

    def test_home_page_can_store_post_request(self):
        request = HttpRequest()
        request.method = 'POST'
        request.POST["item_text"] = 'new item'
        response = home_page(request)
        exptected_content = render_to_string(
                'home.html',
                {'new_item_text':'new item'}
        )

        self.assertEqual(
                response.content.decode('utf8'), 
                exptected_content
        )



    
